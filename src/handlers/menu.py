from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from states import EditProfileStates
from keyboards.keyboards import main_menu_keyboard, settings_keyboard
from services.database import Database
from keyboards.keyboards import (
    edit_profile_field_keyboard,
    get_categories_keyboard
)

router = Router()
db = Database()

@router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def main_menu(message: Message):
    await message.bot.delete_message(message.chat.id, message.message_id)

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard(await db.is_admin_or_moderator(message.from_user.id))
    )

@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def help_command(message: Message):
    await message.bot.delete_message(message.chat.id, message.message_id)

    await message.answer(
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n"
        "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "‚Ä¢ /help - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å\n"
        "‚Ä¢ üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏ - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫\n"
        "‚Ä¢ üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ª–∏–º–ø–∏–∞–¥—ã - –°–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥\n"
        "‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "‚Ä¢ üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    )

@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings_command(message: Message):
    await message.bot.delete_message(message.chat.id, message.message_id)

    await message.answer(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:",
        reply_markup=settings_keyboard()
    )

@router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def view_profile(message: Message):
    await message.bot.delete_message(message.chat.id, message.message_id)

    user = await db.get_user(message.from_user.id)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    role_name = await db.get_role_name(user.get('user_id'))
    category_name = await db.get_category_name_by_user_id(user.get('user_id'))
    
    profile_text = (
        "üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"‚ñ´Ô∏è –ò–º—è: {user['first_name']}\n"
        f"‚ñ´Ô∏è –§–∞–º–∏–ª–∏—è: {user['last_name']}\n"
        f"‚ñ´Ô∏è –û—Ç—á–µ—Å—Ç–≤–æ: {user.get('middle_name', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"‚ñ´Ô∏è –†–æ–ª—å: {role_name}\n"
        f"‚ñ´Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}"
    )
    
    await message.answer(profile_text, reply_markup=main_menu_keyboard(await db.is_admin_or_moderator(message.from_user.id)))

@router.message(F.text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
async def start_edit_profile(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    await state.set_state(EditProfileStates.select_field)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
        reply_markup=edit_profile_field_keyboard()
    )

@router.callback_query(EditProfileStates.select_field, F.data.startswith("profile_edit_field_"))
async def select_field_to_edit(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    field = callback.data.split("_")[-1]
    await state.update_data(edit_field=field)
    
    field_names = {
        "first": "–∏–º—è",
        "last": "—Ñ–∞–º–∏–ª–∏—é",
        "middle": "–æ—Ç—á–µ—Å—Ç–≤–æ",
        "category": "–∫–∞—Ç–µ–≥–æ—Ä–∏—é"
    }
    
    if field == "category":
        categories = await db.get_categories()
        await callback.message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=get_categories_keyboard(categories, is_edit=True)
        )
        await state.set_state(EditProfileStates.edit_category)
    else:
        await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ {field_names.get(field, '–∑–Ω–∞—á–µ–Ω–∏–µ')}:")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if field == "first":
            await state.set_state(EditProfileStates.edit_first_name)
        elif field == "last":
            await state.set_state(EditProfileStates.edit_last_name)
        elif field == "middle":
            await state.set_state(EditProfileStates.edit_middle_name)
    
    await callback.message.delete()
    await callback.answer()

@router.message(EditProfileStates.edit_first_name)
async def process_edit_first_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏"""
    success = await db.update_user_profile(
        message.from_user.id,
        first_name=message.text
    )
    
    if success:
        await message.answer("‚úÖ –ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–º–µ–Ω–∏")
    
    await state.clear()

@router.message(EditProfileStates.edit_last_name)
async def process_edit_last_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Ñ–∞–º–∏–ª–∏–∏"""
    success = await db.update_user_profile(
        message.from_user.id,
        last_name=message.text
    )
    
    if success:
        await message.answer("‚úÖ –§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–º–∏–ª–∏–∏")
    
    await state.clear()

@router.message(EditProfileStates.edit_middle_name)
async def process_edit_middle_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Å—Ç–≤–∞"""
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "-", —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ None
    middle_name = message.text if message.text != "-" else None
    
    success = await db.update_user_profile(
        message.from_user.id,
        middle_name=middle_name
    )
    
    if success:
        await message.answer("‚úÖ –û—Ç—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç—á–µ—Å—Ç–≤–∞")
    
    await state.clear()

@router.callback_query(EditProfileStates.edit_category, F.data.startswith("edit_cat_"))
async def process_edit_category(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category_id = int(callback.data.split("_")[2])
    success = await db.update_user_profile(
        callback.from_user.id,
        category_id=category_id
    )
    
    if success:
        await callback.message.answer("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    else:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    
    await callback.message.delete()
    await state.clear()
    await callback.answer()

@router.callback_query(F.data == "cancel_edit_profile")
async def cancel_edit_profile(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    await state.clear()
    await callback.message.answer(
        "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=main_menu_keyboard(await db.is_admin_or_moderator(callback.from_user.id))
    )
    await callback.message.delete()
    await callback.answer()
